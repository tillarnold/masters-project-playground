




method is_female(person: Int)
        returns (res: Int)
    // Level of result depends on level of input
    // Only the level of the first bit of person matters
    ensures low(person % 2) ==> low(res)
{
  var gender: Int := person % 2 // gender encoded in first bit
  if (gender == 0) {
    res := 1
  }else{
    res := 0
  }
}



method id_1(a: Int, b: Int) returns (res: Int)
  ensures( rel(b,0) == rel(b,1) ==> rel(res,0) == rel(res, 1))
{
  res := b;
}

method id_2(a: Int, b: Int) returns (res: Int)
  requires rel(b,0) == rel(b,1)
  ensures(rel(res,0) == rel(res, 1))
  ensures res == rel(res,1)
{
  res := b;
}

method client(x: Int, y: Int) returns (res1: Int, res2: Int){
   res1  := id_2(x,100);
   res2  := id_2(x,100);

   assert res1 == res2

}