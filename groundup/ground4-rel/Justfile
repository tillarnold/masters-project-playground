# Configuration
config_prusti_repo := "../../../prusti-dev"
config_rust_toolchain := "nightly-2023-07-16-x86_64-unknown-linux-gnu"

# Computed values
prusti_dev_dir := absolute_path(config_prusti_repo)
prusti_target_dir := prusti_dev_dir / "target"
prusti_bins_dir := prusti_target_dir / "debug"
user_home_dir := `realpath ~`
rustup_home := absolute_path(env_var_or_default("RUSTUP_HOME", user_home_dir/".rustup"))
toolchain_home := rustup_home / "toolchains" / config_rust_toolchain



main_rs := absolute_path("src/main.rs")

# viper_version := "Stable"
viper_version := "Nightly"
viper_tools_candidate_1 := user_home_dir / "software/VSCodium-linux-x64-1.80.1.23194/data/user-data/User/globalStorage/viper-admin.viper"/ viper_version/ "ViperTools"
viper_tools_candidate_2 := user_home_dir / ".config/VSCodium/User/globalStorage/viper-admin.viper"/ viper_version/ "ViperTools"


# viper_tools := user_home_dir / "software/VSCodium-linux-x64-1.80.1.23194/data/user-data/User/globalStorage/viper-admin.viper" / viper_version / "ViperTools"

viper_tools := if path_exists(viper_tools_candidate_1) == "true" {
        viper_tools_candidate_1
    } else if path_exists(viper_tools_candidate_2) == "true" {
        viper_tools_candidate_2
    } else {
        error("None of the viper dirs exists")
    }


classfile_dir := viper_tools / "backends"

viper_backend := "viper.silicon.SiliconRunner"
#viper_backend := "viper.carbon.Carbon"

# Env varss
export RUST_BACKTRACE := "1"
export PRUSTI_LOG := "warn,mir_state_analysis=warn"
export RUST_LOG := "debug,mir_state_analysis=warn"
export PRUSTI_LOG_TRACING := "false"
export PRUSTI_CHECK_OVERFLOWS := "false"
export Z3_EXE := viper_tools / "z3/bin/z3"
export BOOGIE_EXE := viper_tools / "boogie/Binaries/Boogie"


_default:
  @just --list --unsorted


build-prusti:
	mkdir -p local-testing
	cd {{prusti_dev_dir}}/prusti && cargo build

cargo-prusti: (build-prusti)
	{{prusti_bins_dir}}/cargo-prusti

prusti: (build_all_prusti)
	{{prusti_bins_dir}}/prusti-rustc -Z dump-mir=F {{main_rs}}
	mkdir -p log
	rm -f log/viper_with_plugin.log
	just run_viper_with_extension ./local-testing/simple.vpr > log/viper_with_plugin.log
	@echo --------------
	tail log/viper_with_plugin.log
	@echo --------------



prusti_driver_direct:
	PRUSTI_VIPER_HOME="{{viper_tools}}/backends" \
	 PRUSTI_JAVA_HOME="/usr/lib/jvm/jre" \
	 LD_LIBRARY_PATH="{{toolchain_home}}/lib:{{toolchain_home}}/bin:/usr/lib/jvm/jre/lib/server" \
	 PRUSTI_SMT_SOLVER_WRAPPER_PATH="{{prusti_bins_dir}}/prusti-smt-solver" \
	 PRUSTI_SMT_SOLVER_PATH="{{viper_tools}}/z3/bin/z3" \
	 valgrind --num-callers=500 -- {{prusti_bins_dir}}/prusti-driver \
	 	--cfg=prusti {{main_rs}} \
		-L dependency={{prusti_target_dir}}/verify/debug/deps \
		--extern prusti_contracts={{prusti_target_dir}}/verify/debug/libprusti_contracts.rlib \
		--extern prusti_std={{prusti_target_dir}}/verify/debug/libprusti_std.rlib \
		--sysroot {{toolchain_home}}

print_log:
	bat target/verify/log/trace.json


delete_logs_and_dumps:
	rm -rf mir_dump/
	rm -rf log/
	rm -rf rustc-ice-*
	rm -rf local-testing/



open_graph:
	cd log/analysis/fn_name/ && dot -Tpdf -ofree_pcs_fn_name.pdf free_pcs_fn_name.dot && xdg-open free_pcs_fn_name.pdf


clean_build_prusti:
	mkdir -p local-testing
	cd {{prusti_dev_dir}} && cargo clean
	just build_all_prusti


build_all_prusti:
	mkdir -p local-testing
	cd {{prusti_dev_dir}}/prusti && cargo build
	cd {{prusti_dev_dir}}/prusti-contracts-build && cargo build
	cd {{prusti_dev_dir}}/prusti-launch && cargo build

run_viper_with_extension file:
    Z3_EXE="{{viper_tools}}/z3/bin/z3" java -Xmx2048m -Xss128m \
    -cp :"{{classfile_dir}}/silver-sif-extension.jar":"{{classfile_dir}}/viperserver.jar" "{{viper_backend}}" \
    --plugin viper.silver.sif.SIFPlugin {{file}}
